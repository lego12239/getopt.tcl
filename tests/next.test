lappend auto_path [pwd]/../
package require tcltest
package require getopt

proc next-1.0_cb {_accu oname oarg} {
	upvar 2 $_accu accu

	lappend accu [list $oname $oarg]

	return 0
}

tcltest::test next-1.0 {
	1 opt
} -body {
	set res ""
	set opts {-a}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts not empty: '$opts'"
	}
	return $res
} -result {{a {}}}

tcltest::test next-1.1 {
	2 opts
} -body {
	set res ""
	set opts {-a -v}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts not empty: '$opts'"
	}
	return $res
} -result {{a -v} {v {}}}

tcltest::test next-1.2 {
	3 opts
} -body {
	set res ""
	set opts {-a -v -d}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts not empty: '$opts'"
	}
	return $res
} -result {{a -v} {v -d} {d {}}}

tcltest::test next-1.3 {
	2 opts(glued)
} -body {
	set res ""
	set opts {-av}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts not empty: '$opts'"
	}
	return $res
} -result {{a v} {v {}}}

tcltest::test next-1.4 {
	3 opts(glued)
} -body {
	set res ""
	set opts {-avd}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts not empty: '$opts'"
	}
	return $res
} -result {{a vd} {v d} {d {}}}

tcltest::test next-1.5 {
	1 opt, with non opts
} -body {
	set res ""
	set opts {some -a nonopts args}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne "some nonopts args"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a nonopts}}

tcltest::test next-1.6 {
	2 opts, with non opts
} -body {
	set res ""
	set opts {some -a nonopts -v args}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne "some nonopts args"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a nonopts} {v args}}

tcltest::test next-1.7 {
	3 opts, with non opts
} -body {
	set res ""
	set opts {some -a nonopts -v args -d 1}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne "some nonopts args 1"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a nonopts} {v args} {d 1}}

tcltest::test next-2.0 {
	0 opts
} -body {
	set res ""
	set opts {}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {}

tcltest::test next-3.0 {
	2 opts(glued)
} -body {
	set res ""
	set opts {s o -ad m e}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a d} {d m}}

tcltest::test next-3.1 {
	2 opts
} -body {
	set res ""
	set opts {s -a o -d m e}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a o} {d m}}

tcltest::test next-3.2 {
	5 opts
} -body {
	set res ""
	set opts {-a -d -b -D -e}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a -d} {d -b} {b -D} {D -e} {e {}}}

tcltest::test next-3.3 {
	5 opts
} -body {
	set res ""
	set opts {-adbD -e}
	getopt::parse {next-1.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {{a dbD} {d bD} {b D} {D -e} {e {}}}

proc next-4.0_cb {_accu oname oarg} {
	upvar 2 $_accu accu

	switch $oname {
	d -
	debug -
	l -
	log-level {
		lappend accu [list $oname $oarg]
		return 1
	}
	default {
		lappend accu [list $oname]
	}
	}

	return 0
}

tcltest::test next-4.0 {
	5 opts with arg
} -body {
	set res ""
	set opts {-a -d -b -D -e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {d -b} D e}

tcltest::test next-4.1 {
	opt with arg
} -body {
	set res ""
	set opts {-a -l}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l {}}}

tcltest::test next-4.1.1 {
	opt with args(glued)
} -body {
	set res ""
	set opts {-al}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l {}}}

tcltest::test next-4.2 {
	long opt with arg
} -body {
	set res ""
	set opts {-a --log-level}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {log-level {}}}

tcltest::test next-4.3.0 {
	opt with arg
} -body {
	set res ""
	set opts {-a -l0123 -b}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.3.0.1 {
	opt with arg
} -body {
	set res ""
	set opts {s -a o -l0123 m -b e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.3.1 {
	opt with arg(glued)
} -body {
	set res ""
	set opts {-al0123 -b}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.3.2 {
	opt with arg(glued)
} -body {
	set res ""
	set opts {s -al0123 o -b m e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.4.0 {
	opt with arg (sep arg)
} -body {
	set res ""
	set opts {-a -l 0123 -b}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.4.0.1 {
	opt with arg (sep arg)
} -body {
	set res ""
	set opts {s -a o -l 0123 m -b e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.4.1 {
	opt with arg (glued, sep arg)
} -body {
	set res ""
	set opts {-al 0123 -b}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.4.1.1 {
	opt with arg (glued, sep arg)
} -body {
	set res ""
	set opts {s -al 0123 o -b m e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {l 0123} b}

tcltest::test next-4.5.0 {
	long opt with arg (=)
} -body {
	set res ""
	set opts {-a --log-level=0123 -b}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {log-level 0123} b}

tcltest::test next-4.5.0.1 {
	long opt with arg (=)
} -body {
	set res ""
	set opts {s -a o --log-level=0123 m -b e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {log-level 0123} b}

tcltest::test next-4.5.0.2 {
	long opt with arg (=)
} -body {
	set res ""
	set opts {s --unknown o --log-level=0123 m -b e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {unknown {log-level 0123} b}

tcltest::test next-4.5.0.3 {
	long opt with arg (=)
} -body {
	set res ""
	set opts {s --unknown=value o --log-level=0123 m -b e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {unknown {log-level 0123} b}

tcltest::test next-4.6.0 {
	long opt with arg (sep arg)
} -body {
	set res ""
	set opts {-a --log-level 0123 -b}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {log-level 0123} b}

tcltest::test next-4.6.0.1 {
	long opt with arg (sep arg)
} -body {
	set res ""
	set opts {s -a o --log-level 0123 m -b e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {log-level 0123} b}

tcltest::test next-5.0 {
	opt with arg (glued)
} -body {
	set res ""
	set opts {s -ad456 o m e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {d 456}}

tcltest::test next-7.0 {
	--
} -body {
	set res ""
	set opts {--}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne ""} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {}

tcltest::test next-7.1 {
	--
} -body {
	set res ""
	set opts {s -- o -a m -l1 e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o -a m -l1 e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {}

tcltest::test next-7.2 {
	--
} -body {
	set res ""
	set opts {s -a -- o m -l1 e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m -l1 e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a}

tcltest::test next-7.3 {
	--
} -body {
	set res ""
	set opts {s -a --version -- o m -l1 e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s o m -l1 e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a version}

tcltest::test next-7.4 {
	--
} -body {
	set res ""
	set opts {-a s -d -b --version -c -- -d o m -l1 e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s -d o m -l1 e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {d -b} version c}

tcltest::test next-7.5 {
	-- escaped
} -body {
	set res ""
	set opts {-a s -d o -b m --version e -l -- -d o m e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s m e m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {d o} b version {l --} {d o}}

tcltest::test next-7.6 {
	--
} -body {
	set res ""
	set opts {-a s -d o -b m --version e --log-level -- -d o m e}
	getopt::parse {next-4.0_cb res} opts
	if {$opts ne "s m e m e"} {
		error "opts is wrong: '$opts'"
	}
	return $res
} -result {a {d o} b version {log-level --} {d o}}


tcltest::cleanupTests
